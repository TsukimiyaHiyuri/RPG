#include "Magic.h"

Magic::Magic() {

}

void Magic::setStr(std::string *n, int damage, Enemy *e, Player *p) {
	*n += p->getName() + "は" + this->getName() + "を唱えた！\n";
	*n += e->getName() + "に" + std::to_string(damage) + "のダメージ！";
}

void Magic::setDiscription() {
	this->discription += "\n消費MP: " + std::to_string(this->useMp);
}

Fire::Fire() {
	this->name = "ファイア";
	this->learnLv = 1;
	this->type = AttackSolo;
	this->useMp = 5;
	this->discription = "敵１体に小ダメージ";
	this->setDiscription();
}

bool Fire::use(Player *player, Enemy *e, std::string *n) {
	if (player->getMp() >= this->useMp) {
		int damage = 20;
		e->damage(damage);
		player->addMp(-this->useMp);

		this->setStr(n, damage, e, player);

		return true;
	}
	return false;
}

Thunder::Thunder() {
	this->name = "サンダー";
	this->learnLv = 1;
	this->type = AttackAll;
	this->useMp = 7;
	this->discription = "敵全体に小ダメージ";
	this->setDiscription();
}

bool Thunder::use(Player *player, Enemy *e[], std::string *n) {
	if (player->getMp() >= this->useMp) {
		int damage = 15;
		for (int i = 0; i < MAXENEMYNUM; i++) {
			e[i]->damage(damage);
		}
		player->addMp(-this->useMp);

		*n += player->getName() + "は" + this->getName() + "を唱えた！\n";
		*n += "敵全体に" + std::to_string(damage) + "のダメージ！";

		return true;
	}
	return false;
}

Cure::Cure() {
	this->name = "キュアー";
	this->learnLv = 1;
	this->type = CureSolo;
	this->useMp = 5;
	this->discription = "自分を小回復";
	this->setDiscription();
}

bool Cure::use(Player *player, std::string *n) {
	if (player->getMp() >= this->useMp) {
		player->addMp(-this->useMp);

		if (player->getHp() + CURE <= player->getMaxHp()) {
			player->addHp(CURE);
		}
		else {
			player->setHp(player->getMaxHp());
		}

		*n += player->getName() + "は" + this->getName() + "を唱えた！\n";
		*n += player->getName() + "のHPが" + std::to_string(CURE) + "回復した";

		return true;
	}
	return false;
}